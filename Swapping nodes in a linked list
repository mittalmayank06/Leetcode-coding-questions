/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void swap(int a,int b,vector<int>&v)
    {
        int temp;
        temp=v[a];
        v[a]=v[b];
        v[b]=temp;
    }
    ListNode* swapNodes(ListNode* head, int k) {
        ListNode* temp;
        ListNode* temp2 = head;
        temp = head;
        int count=0;
        vector<int> v ;
        while(temp!=0)
        {
            v.push_back(temp->val);
            temp=temp->next;
            count++;
            
        }
        
        swap(k-1,count-k,v);
        int i=0;
        
        while(temp2)
        {
            temp2->val = v[i];
            i++;
            temp2= temp2->next;
            
            
        }
        return head;       
    }
};
